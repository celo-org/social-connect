name: social connect
run-name: social connect tests

# Dockefile for the self-hosted runner:
# https://github.com/celo-org/infrastructure/blob/master/terraform/root-modules/gcp/integration-tests-gke/files/github-arc/Dockerfile-monorepo

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

concurrency:
  group: circle-ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash --login -eo pipefail {0}

env:
  # Increment these to force cache rebuilding
  NODE_MODULE_CACHE_VERSION: 3
  NODE_OPTIONS: '--max-old-space-size=4096'
  TERM: dumb
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dorg.gradle.configureondemand=true -Dorg.gradle.jvmargs="-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError"'
  # Git Tag for contract release to use
  RELEASE_TAG: ganache-v7-core-contracts.v9
  # RELEASE_TAG: core-contracts.v9
  # CELO_BLOCKCHAIN_BRANCH_TO_TEST: master
  CELO_BLOCKCHAIN_BRANCH_TO_TEST: release/1.7.x

jobs:
  install-dependencies:
    name: Install dependencies
    outputs:
      package-json-checksum: ${{ steps.node-checksums.outputs.PACKAGE_JSON_CHECKSUM }}
      # Propagate more outputs if you need https://github.com/tj-actions/changed-files#outputs
      # Adding a initial comma so ',<path>' matches also for the first file
      all_modified_files: ',${{ steps.changed-files.outputs.all_modified_files }}'
    # runs-on: ubuntu-latest
    runs-on: ['self-hosted', 'org', '8-cpu']
    container:
      image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo:node18
    timeout-minutes: 30
    steps:
      - name: Restore .git cache
        uses: actions/cache@v3
        id: cache_git
        with:
          path: .git
          key: git-${{ github.ref }}
          restore-keys: |
            git-
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Verify setup for incremental testing
        run: |
          set -euo pipefail
          set -v
          # To get the "main" branch mapping
          git checkout main
          git checkout ${GITHUB_SHA}
          # Verify that following commands work, they are later called in the incremental testing script
          # Their output does not matter here, the fact that they finish successfully does.
          git rev-parse --abbrev-ref HEAD
          git fetch --all --tags
      - name: Calculate node cache keys
        id: node-checksums
        run: |
          find . -maxdepth 5 -type f -name 'package.json' -not -path "*node_modules*" -print0 | sort -z | xargs -0 cat > $RUNNER_TEMP/package.checksum
          echo "PACKAGE_JSON_CHECKSUM=$(md5sum $RUNNER_TEMP/package.checksum | cut -f1 -d' ')"
          echo "PACKAGE_JSON_CHECKSUM=$(md5sum $RUNNER_TEMP/package.checksum | cut -f1 -d' ')" >> "$GITHUB_OUTPUT"
      - name: Restore node cache
        uses: actions/cache@v3
        id: cache_node
        with:
          # We need to cache all the artifacts generated by yarn install+build
          # Update this list also in .github/actions/sync-workspace/action.yml with exactly the same list
          path: |
            node_modules
            packages/**/node_modules
          key: node-${{ runner.os }}-${{ runner.arch }}-${{ env.NODE_MODULE_CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}-${{ steps.node-checksums.outputs.PACKAGE_JSON_CHECKSUM }}
          restore-keys: |
            node-${{ runner.os }}-${{ runner.arch }}-${{ env.NODE_MODULE_CACHE_VERSION }}-
      # We use cache to share the build artifacts between jobs (gh artifacts are too slow...)
      # For more context check https://github.com/actions/upload-artifact/issues/199
      - name: Restore build artifacts cache
        uses: actions/cache@v3
        id: cache_build_artifacts
        with:
          # We need to cache all the artifacts generated by yarn install+build
          # Update this list also in .github/actions/sync-workspace/action.yml with exactly the same list
          path: |
            packages/**/lib
            packages/**/dist
            packages/**/build
          key: code-${{ github.sha }}
          restore-keys: |
            code-${{ github.sha }}
      - name: Install yarn dependencies
        run: git config --global url."https://".insteadOf ssh:// && yarn install
        if: steps.cache_node.outputs.cache-hit != 'true'
      - name: Run yarn postinstall if cache hitted
        run: yarn run postinstall
        if: steps.cache_node.outputs.cache-hit == 'true'
      - name: Fail if any file changed on git
        run: |
          # This fails if there is any change
          if ! git diff-index HEAD --; then
            echo "Git changes detected while building. If this is unexpected, bump NODE_MODULE_CACHE_VERSION in .github/workflows/circleci.yml"
            exit 1
          fi
      - name: Build packages
        run: yarn build --ignore docs --include-dependencies
      - name: Check licenses
        if: steps.cache_node.outputs.cache-hit != 'true'
        run: |
          yarn check-licenses
      - name: Detect files changed in PR, and expose as output
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          # Using comma as separator to be able to easily match full paths (using ,<path>)
          separator: ','
          # Checking if changed in the last 100 commits in PRs
          fetch_depth: '150'
      - run: echo ",${{ steps.changed-files.outputs.all_modified_files }}"
  lint-checks:
    name: Lint code
    runs-on: ['self-hosted', 'org', '8-cpu']
    container:
      image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo:node18
    timeout-minutes: 30
    needs: install-dependencies
    steps:
      # Restore .git cache as we need to checkout the local composite action to run it:
      # https://github.com/orgs/community/discussions/11771
      - uses: actions/cache/restore@v3
        id: cache_git
        with:
          path: .git
          key: git-${{ github.ref }}
      - uses: actions/checkout@v3
      - name: Sync workspace
        uses: ./.github/actions/sync-workspace
        with:
          package-json-checksum: ${{ needs.install-dependencies.outputs.package-json-checksum }}
      - run: yarn run prettify:diff
      - run: yarn run lint
  general_test:
    name: General jest test
    runs-on: ['self-hosted', 'org', '8-cpu']
    container:
      image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo:node18
    needs: install-dependencies
    steps:
      - uses: actions/cache/restore@v3
        id: cache_git
        with:
          path: .git
          key: git-${{ github.ref }}
      - uses: actions/checkout@v3
      - name: Sync workspace
        uses: ./.github/actions/sync-workspace
        with:
          package-json-checksum: ${{ needs.install-dependencies.outputs.package-json-checksum }}
      - name: Run Jest Tests
        run: |
          mkdir -p test-results/jest
          # Skipping packages that are tested in a specific job below
          yarn run lerna \
            --ignore @celo/identity \
            run test
      - name: Upload Jest Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Jest Test Results
          path: test-results/jest


  identity-tests:
    name: Identity Tests
    runs-on: ['self-hosted', 'org', '8-cpu']
    container:
      image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo:node18
    timeout-minutes: 30
    needs: [install-dependencies]
    if: |
      github.base_ref == 'main' || contains(github.base_ref, 'staging') || contains(github.base_ref, 'production') ||
      contains(needs.install-dependencies.outputs.all_modified_files, 'packages/phone-number-privacy/common') ||
      contains(needs.install-dependencies.outputs.all_modified_files, ',yarn.lock') ||
      false
    steps:
      - uses: actions/cache/restore@v3
        id: cache_git
        with:
          path: .git
          key: git-${{ github.ref }}
      - uses: actions/checkout@v3
      - name: Sync workspace
        uses: ./.github/actions/sync-workspace
        with:
          package-json-checksum: ${{ needs.install-dependencies.outputs.package-json-checksum }}
      #- name: Generate DevChain
      #  run: |
      #    cd packages/sdk/identity
      #    yarn test:reset
      - name: Run tests
        run: |
          yarn --cwd=packages/sdk/identity test
  odis-test:
    name: ODIS test
    runs-on: ['self-hosted', 'org', '8-cpu']
    container:
      image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo:node18
    timeout-minutes: 30
    needs: [install-dependencies, lint-checks]
    if: |
      github.base_ref == 'main' || contains(github.base_ref, 'staging') || contains(github.base_ref, 'production') ||
      contains(needs.install-dependencies.outputs.all_modified_files, 'packages/phone-number-privacy') ||
      contains(needs.install-dependencies.outputs.all_modified_files, 'packages/protocol') ||
      contains(needs.install-dependencies.outputs.all_modified_files, 'packages/sdk') ||
      contains(needs.install-dependencies.outputs.all_modified_files, ',package.json') ||
      contains(needs.install-dependencies.outputs.all_modified_files, ',yarn.lock') ||
      false
    steps:
      - uses: actions/cache/restore@v3
        id: cache_git
        with:
          path: .git
          key: git-${{ github.ref }}
      - uses: actions/checkout@v3
      - name: Sync workspace
        uses: ./.github/actions/sync-workspace
        with:
          package-json-checksum: ${{ needs.install-dependencies.outputs.package-json-checksum }}
      - name: Run Tests for common package
        run: |
          yarn --cwd=packages/phone-number-privacy/common test:coverage
      - name: Run Tests for combiner
        run: |
          yarn --cwd=packages/phone-number-privacy/combiner test:coverage
      - name: Run Tests for signer
        run: |
          yarn --cwd=packages/phone-number-privacy/signer test:coverage
